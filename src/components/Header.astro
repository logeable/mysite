---
import CONFIG from "../config";

const { pathname } = Astro.url;

// Normalize the current path by removing trailing slashes (except for root "/")
const currentPath = pathname.replace(/\/$/, "") || "/";

// Check if a given path is active
const isActive = (path: string) => {
  if (currentPath === path) return true;

  const [currentRoot] = currentPath.split("/").filter(Boolean);
  const [pathRoot] = path.split("/").filter(Boolean);

  return currentRoot === pathRoot;
};

const navigations = [
  { name: "Blogs", path: "/blogs" },
  { name: "Tags", path: "/tags" },
  { name: "Projects", path: "/projects" },
  { name: "About", path: "/about" },
];
---

<header>
  <h1 class="logo"><a href="/">{CONFIG.author}</a></h1>
  <button
    class="burger"
    id="burger-btn"
    aria-label="菜单"
    aria-expanded="false"
  >
    <span></span>
    <span></span>
    <span></span>
  </button>
  <nav>
    <ul id="nav-menu">
      {
        navigations.map((nav) => (
          <li>
            <a href={nav.path} class:list={{ active: isActive(nav.path) }}>
              {nav.name}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<style lang="scss">
  header {
    height: 64px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 3px solid #ccc;
    position: relative;
    background: #fff;
    transition:
      background 0.2s,
      border-bottom-color 0.2s;
    margin: 0 0.5rem;
  }

  .logo a {
    text-decoration: none;
    color: #000;
    font-weight: bolder;
    font-size: 2rem;
    white-space: nowrap;
    transition: color 0.2s;
  }

  .burger {
    display: none;
    flex-direction: column;
    justify-content: center;
    gap: 5px;
    width: 36px;
    height: 36px;
    background: none;
    border: none;
    cursor: pointer;
    z-index: 20;
  }
  .burger span {
    display: block;
    height: 3px;
    width: 100%;
    background: #222;
    border-radius: 2px;
    transition: background 0.2s;
  }

  nav ul {
    display: flex;
    list-style: none;
    gap: 1rem;
    margin: 0;
    padding: 0;
    flex-wrap: wrap;
    background: #fff;
    transition: background 0.2s;
  }

  nav a {
    text-decoration: none;
    color: #000;
    font-size: 1rem;
    font-weight: bold;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    transition:
      color 0.2s,
      background 0.2s;
  }

  nav a:hover {
    color: var(--primary-color);
  }
  nav a.active {
    text-decoration: underline;
    text-decoration-style: wavy;
    color: var(--primary-color);
  }

  @media (max-width: 600px) {
    .burger {
      display: flex;
      margin-left: auto;
    }
    nav ul {
      position: absolute;
      margin: 0 1rem;
      top: 64px;
      left: 0;
      right: 0;
      background: #fff;
      flex-direction: column;
      gap: 0;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
      padding: 0.5rem 0;
      display: none;
      z-index: 10;
      transition: all 0.3s;
    }
    nav ul.open {
      display: flex;
    }
    nav li {
      width: 100%;
      text-align: center;
      padding: 0.7rem 0;
    }
    nav ul {
      gap: 0.5rem;
      flex-wrap: wrap;
    }
    nav a {
      font-size: 0.95rem;
      padding: 0.15rem 0.4rem;
    }
  }

  @media (prefers-color-scheme: dark) {
    header {
      background: #18181c;
      border-bottom-color: #333;
    }
    .logo a {
      color: #fff;
    }
    .burger span {
      background: #eee;
    }
    nav ul {
      background: #23232a;
    }
    nav a {
      color: #eee;
    }
    nav a:hover,
    nav a.active {
      color: var(--primary-color);
    }
  }
</style>

<script is:inline>
  const burger = document.getElementById("burger-btn");
  const menu = document.getElementById("nav-menu");
  burger.addEventListener("click", () => {
    const expanded = burger.getAttribute("aria-expanded") === "true";
    burger.setAttribute("aria-expanded", !expanded);
    menu.classList.toggle("open");
  });
  // 点击菜单项后自动收起
  menu.querySelectorAll("a").forEach((link) => {
    link.addEventListener("click", () => {
      burger.setAttribute("aria-expanded", false);
      menu.classList.remove("open");
    });
  });
</script>
